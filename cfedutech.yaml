---
Parameters:
  SecurityGroupDescription:
    Description: "Security Group Description"
    Type: String

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Condition: DemoCondition
    Properties:
      AvailabilityZone: ap-southeast-1a
      ImageId: !FindInMap [EC2AmiIds, !Ref AWS::Region, "ImageId"]
      InstanceType: t2.micro
      SecurityGroups:
      - !Ref MyEC2SecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe
          sudo apt-get update
          sudo apt install git-all --assume-yes
          cd /home/ubuntu
          sudo -u ubuntu git clone https://github.com/ivanbok/edutech-platform.git
          sudo apt install python3-pip --assume-yes
          sudo pip3 install Django
          sudo pip3 install djangorestframework
          sudo pip3 install djoser
          sudo python3 edutech-platform/manage.py runserver 0.0.0.0:80 &
  MyEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref SecurityGroupDescription
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        ToPort: 80
        IpProtocol: tcp

Outputs:
  MyEC2Instance:
    Description: "My CloudFormation EC2 Instance"
    Value: !Ref MyInstance
    Export:
      Name: MyEC2Instance
  EC2SecurityGroup:
    Description: "Security Group Description"
    Value: !Ref MyEC2SecurityGroup
    Export: 
      Name: EC2SecurityGroup

Mappings:
  EC2AmiIds:
    ap-southeast-1:
      "ImageId": ami-055d15d9cfddf7bd3
    ap-southeast-2:
      "ImageId": ami-0b7dcd6e6fd797935
    ap-northeast-1:
      "ImageId": ami-088da9557aae42f39

Conditions:
  DemoCondition: !Equals [ "ap-southeast-1", !Ref AWS::Region ]